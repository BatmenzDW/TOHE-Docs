import{_ as r,r as i,o as s,c as d,a as l,b as o,w as t,d as e,e as u}from"./app-B2kR504j.js";const c={},h={id:"⚙️-system-settings",tabindex:"-1"},y={class:"header-anchor",href:"#⚙️-system-settings"},f=l("hr",null,null,-1),m=l("ul",null,[l("li",null,"Swap and choose your saved lobby settings")],-1),_=l("p",null,"Kick players whose level is lower than",-1),p=l("p",null,"Turn on Whitelist to bypass level kick",-1),b=l("p",null,"Kick Non-PC players",-1),g=l("p",null,"Kick players without a friend code",-1),w=l("p",null,"Apply VIP List",-1),k=l("p",null,"Apply DenyName List",-1),O=l("p",null,"Apply BanList",-1),F=l("p",null,"Apply Moderator List",-1),N=l("p",null,"Kick players that say start",-1),v=l("li",null,[e("Number of warnings before kick "),l("ul",null,[l("li",null,"Set how many times a player can say start before they get kicked")])],-1),P=l("p",null,"Temp ban players who keep quitting",-1),S=l("ul",null,[l("li",null,[e("Amount of Quits needed for temp ban "),l("ul",null,[l("li",null,"Set how many times a player can say quit before they get temp banned")])])],-1),D=u("<li><p>Minutes to wait before auto-starting</p><ul><li>Set how many minutes the host has to wait before the game auto-starts</li></ul></li><li><p>Force start when Lobby Timer (in minutes) goes below</p><ul><li>Set the time when the game will auto-start</li></ul></li><li><p>Minimum Player Threshold to auto-start</p><ul><li>Set the minimum amount of players required to auto-start the game</li></ul></li><li><p>Initial countdown for auto-starting</p><ul><li>Set the countdown for auto-starting the game</li></ul></li>",4),E=l("p",null,"Auto Play Again",-1),R=l("ul",null,[l("li",null,[e("Delay before re-entering lobby "),l("ul",null,[l("li",null,"Set how long it will take to re-enter lobby after a round")])])],-1),T=l("li",null,[l("p",null,"When a cheating player is found"),l("ul",null,[l("li",null,[e("You can choose an action to take when a player is found cheating "),l("ul",null,[l("li",null,"Ban - Adds them to the BanList.txt immediately"),l("li",null,"Kick - Kicks them from the lobby"),l("li",null,"Notify Me - Notify only the host of the cheating player"),l("li",null,"Notify Everyone - Notify everyone of the cheating player")])])])],-1),A=l("p",null,"Disable VoteKick System",-1),H=l("p",null,"Display Kill-log",-1),M=l("code",null,"/l",-1),x=l("p",null,"Display Last Roles",-1),L=l("code",null,"/l",-1),K=l("p",null,"Auto Display Last Result",-1),j=l("code",null,"/l",-1),B=u("<li><p>Suffix</p><ul><li>Change the Suffix under Host name</li><li>You can choose between: <ul><li>None - Displays nothing</li><li>Version - Displays which TOHE update the lobby is using</li><li>Streaming - Displays that you are Live-Streaming</li><li>Recording - Displays that you are Recording</li><li>Room Host - Displays that you are the Host of the Room</li><li>Original Name - Displays your Among Us Display Name</li><li>Don’t kill me - Displays the words “Don’t kill me” below your name</li><li>No phones - Displays “No phones” below your name</li><li>Auto-Host - Displays “Auto-Host” below your name</li></ul></li></ul></li>",1),C=l("p",null,"Hide 'Host' Text",-1),q=l("p",null,"Hide Game Settings",-1),I=l("p",null,[e("Players can use the "),l("code",null,"/color"),e(" command")],-1),V=l("code",null,"/color",-1),G=l("p",null,[e("Players can use the "),l("code",null,"/quit"),e(" command to leave the lobby forever")],-1),U=l("code",null,"/quit",-1),W=l("code",null,"/quit",-1),X=l("p",null,[e("Players can use the "),l("code",null,"/rn"),e(" command")],-1),Y=l("code",null,"/rn",-1),z=l("li",null,[l("p",null,"Player Name Mode"),l("ul",null,[l("li",null,[e("This is how the player’s name is displayed in game. You can choose between: "),l("ul",null,[l("li",null,"Disable - Default player names will be used"),l("li",null,"Color - Display the player’s color"),l("li",null,"Random - Display a random name")])])])],-1),J=l("p",null,"Disable Emoji in names",-1),Q=l("p",null,"Show Role Info to Unmodded Clients Round 1",-1),Z=l("p",null,"Show Role Descriptions to Unmodded Clients at First Meeting",-1),$=l("p",null,"Role Assigning Algorithm",-1),ll=l("li",null,"Default",-1),el=l("li",null,".NET System Random",-1),ol=l("li",null,"HashRandom",-1),nl={href:"https://www.programmingalgorithms.com/algorithm/xor-shift/",target:"_blank",rel:"noopener noreferrer"},tl={href:"https://www.programmingalgorithms.com/algorithm/mersenne-twister/",target:"_blank",rel:"noopener noreferrer"},al=l("li",null,"Default - Everyone appears grey",-1),il=l("li",null,"Random - Everyone appears grey",-1),ul=l("li",null,"Only Random Color - Everyone appears grey",-1),rl=l("code",null,"/up [rolename]",-1),sl=l("code",null,"/up [rolename]",-1),dl=l("blockquote",null,[l("p",null,"From: TOHE")],-1);function cl(hl,yl){const n=i("font"),a=i("ExternalLinkIcon");return s(),d("div",null,[l("h1",h,[l("a",y,[l("span",null,[o(n,{color:"#ffc0cb"},{default:t(()=>[e("⚙️ System Settings")]),_:1})])])]),f,l("ul",null,[l("li",null,[o(n,{color:"#ffeb04"},{default:t(()=>[e("Preset")]),_:1}),m]),l("li",null,[o(n,{color:"red"},{default:t(()=>[e("Black Screen Prevention (Recommended)")]),_:1}),l("ul",null,[l("li",null,[o(n,{color:"green"},{default:t(()=>[e("ON")]),_:1}),e(": Mod will prevent black-screening")]),l("li",null,[o(n,{color:"red"},{default:t(()=>[e("OFF")]),_:1}),e(": Mod will not prevent black-screening")])])]),l("li",null,[l("p",null,[e("Enable Gradient Tags "),o(n,{color:"red"},{default:t(()=>[e("(can cause disconnect issues)")]),_:1})]),l("ul",null,[l("li",null,[o(n,{color:"green"},{default:t(()=>[e("ON")]),_:1}),e(": Gradient Tags can be used.")]),l("li",null,[o(n,{color:"red"},{default:t(()=>[e("OFF")]),_:1}),e(": Gradient Tags cannot be used.")])])]),l("li",null,[o(n,{color:"#01ff00"},{default:t(()=>[e("Enable use of /kcount command")]),_:1}),l("ul",null,[l("li",null,[o(n,{color:"green"},{default:t(()=>[e("ON")]),_:1}),e(": Players can use /kcount to see the amount of killers left")]),l("li",null,[o(n,{color:"red"},{default:t(()=>[e("OFF")]),_:1}),e(": Players cannot use /kcount to see the amount of killers left")])])]),l("li",null,[o(n,{color:"#01ff00"},{default:t(()=>[e("See ejected roles in meetings")]),_:1}),l("ul",null,[l("li",null,[o(n,{color:"green"},{default:t(()=>[e("ON")]),_:1}),e(": Roles of ejected players will be shown to everyone")]),l("li",null,[o(n,{color:"red"},{default:t(()=>[e("OFF")]),_:1}),e(": Roles of ejected players will not be shown to everyone")])])]),l("li",null,[_,l("ul",null,[l("li",null,[e("Set the minimum level required to play "),l("ul",null,[l("li",null,[e("Temp Ban low level players "),l("ul",null,[l("li",null,[o(n,{color:"green"},{default:t(()=>[e("ON")]),_:1}),e(": Temporarily bans low level players from your lobby")]),l("li",null,[o(n,{color:"red"},{default:t(()=>[e("OFF")]),_:1}),e(": Doesn't temporarily ban low level players from your lobby, kicks them like usual")])])])])])])]),l("li",null,[p,l("ul",null,[l("li",null,[o(n,{color:"green"},{default:t(()=>[e("ON")]),_:1}),e(": Whitelisted players can join the lobby even if they don't meet lobby requirements")]),l("li",null,[o(n,{color:"red"},{default:t(()=>[e("OFF")]),_:1}),e(": Whitelisted players are ignored, and treated as everyone else is")])])]),l("li",null,[b,l("ul",null,[l("li",null,[o(n,{color:"green"},{default:t(()=>[e("ON")]),_:1}),e(": Non-PC players cannot play"),l("ul",null,[l("li",null,[e("Kick Android players "),l("ul",null,[l("li",null,[o(n,{color:"green"},{default:t(()=>[e("ON")]),_:1}),e(": Android players will be kicked from the lobby automatically")]),l("li",null,[o(n,{color:"red"},{default:t(()=>[e("OFF")]),_:1}),e(": Android players will not be kicked from the lobby automatically")])])]),l("li",null,[e("Kick iOS players "),l("ul",null,[l("li",null,[o(n,{color:"green"},{default:t(()=>[e("ON")]),_:1}),e(": iOS players will be kicked from the lobby automatically")]),l("li",null,[o(n,{color:"red"},{default:t(()=>[e("OFF")]),_:1}),e(": iOS players will not be kicked from the lobby automatically")])])]),l("li",null,[e("Kick Xbox players "),l("ul",null,[l("li",null,[o(n,{color:"green"},{default:t(()=>[e("ON")]),_:1}),e(": Xbox players will be kicked from the lobby automatically")]),l("li",null,[o(n,{color:"red"},{default:t(()=>[e("OFF")]),_:1}),e(": Xbox players will not be kicked from the lobby automatically")])])]),l("li",null,[e("Kick PlayStation players "),l("ul",null,[l("li",null,[o(n,{color:"green"},{default:t(()=>[e("ON")]),_:1}),e(": PlayStation players will be kicked from the lobby automatically")]),l("li",null,[o(n,{color:"red"},{default:t(()=>[e("OFF")]),_:1}),e(": PlayStation players will not be kicked from the lobby automatically")])])]),l("li",null,[e("Kick Nintendo Switch players "),l("ul",null,[l("li",null,[o(n,{color:"green"},{default:t(()=>[e("ON")]),_:1}),e(": Nintendo Switch players will be kicked from the lobby automatically")]),l("li",null,[o(n,{color:"red"},{default:t(()=>[e("OFF")]),_:1}),e(": Nintendo Switch players will not be kicked from the lobby automatically")])])])])]),l("li",null,[o(n,{color:"red"},{default:t(()=>[e("OFF")]),_:1}),e(": Non-PC players can play")])])]),l("li",null,[g,l("ul",null,[l("li",null,[o(n,{color:"green"},{default:t(()=>[e("ON")]),_:1}),e(": Players without a registered account cannot play")]),l("li",null,[o(n,{color:"red"},{default:t(()=>[e("OFF")]),_:1}),e(": Players without a registered account can play"),l("ul",null,[l("li",null,[e("Temp Ban players without a friend code "),l("ul",null,[l("li",null,[o(n,{color:"green"},{default:t(()=>[e("ON")]),_:1}),e(": Temporarily bans players without friend codes from your lobby")]),l("li",null,[o(n,{color:"red"},{default:t(()=>[e("OFF")]),_:1}),e(": Doesn't temporarily ban players without friend codes from your lobby, kicks them like usual")])])])])])])]),l("li",null,[w,l("ul",null,[l("li",null,[o(n,{color:"green"},{default:t(()=>[e("ON")]),_:1}),e(": Players who are VIPs will be given a VIP Tag in the lobby")]),l("li",null,[o(n,{color:"red"},{default:t(()=>[e("OFF")]),_:1}),e(": There will be no VIP Tag in the lobby")])])]),l("li",null,[k,l("ul",null,[l("li",null,[o(n,{color:"green"},{default:t(()=>[e("ON")]),_:1}),e(": Players using names in the DenyName.txt document cannot play")]),l("li",null,[o(n,{color:"red"},{default:t(()=>[e("OFF")]),_:1}),e(": All names are allowed to play")])])]),l("li",null,[O,l("ul",null,[l("li",null,[o(n,{color:"green"},{default:t(()=>[e("ON")]),_:1}),e(": Players that have been banned in previous lobbies cannot join new lobbies by the host")]),l("li",null,[o(n,{color:"red"},{default:t(()=>[e("OFF")]),_:1}),e(": Players that have been banned in previous lobbies can rejoin new lobbies by the host")])])]),l("li",null,[F,l("ul",null,[l("li",null,[o(n,{color:"green"},{default:t(()=>[e("ON")]),_:1}),e(": Players that have been added to the Host’s Moderator List will be given Moderator Permissions in the lobby")]),l("li",null,[o(n,{color:"red"},{default:t(()=>[e("OFF")]),_:1}),e(": Players that have been added to the Host’s Moderator List will not be given Moderator Permissions in the lobby"),l("ul",null,[l("li",null,[e("Allow moderators to use /say command "),l("ul",null,[l("li",null,[o(n,{color:"green"},{default:t(()=>[e("ON")]),_:1}),e(": Moderators can use /say to send a message when dead")]),l("li",null,[o(n,{color:"red"},{default:t(()=>[e("OFF")]),_:1}),e(": Moderators cannot use /say to send a message when dead")])])])])])])]),l("li",null,[N,l("ul",null,[l("li",null,[o(n,{color:"green"},{default:t(()=>[e("ON")]),_:1}),e(": Players that type “start, Start, begin, etc” will be kicked from the lobby"),l("ul",null,[v,l("li",null,[e("Block a player after they’re kicked "),l("ul",null,[l("li",null,[o(n,{color:"green"},{default:t(()=>[e("ON")]),_:1}),e(": Players that get kicked from spamming Start will be auto-blocked")]),l("li",null,[o(n,{color:"red"},{default:t(()=>[e("OFF")]),_:1}),e(": Players can join even when kicked")])])])])]),l("li",null,[o(n,{color:"red"},{default:t(()=>[e("OFF")]),_:1}),e(": Players will be able to say “start, Start, begin, etc” without being kicked")])])]),l("li",null,[P,l("ul",null,[l("li",null,[o(n,{color:"green"},{default:t(()=>[e("ON")]),_:1}),e(": Players that keep quitting will be blacklisted from joining for some time")]),l("li",null,[o(n,{color:"red"},{default:t(()=>[e("OFF")]),_:1}),e(": Players that keep quitting will not be blacklisted from joining for some time"),S])])]),D,l("li",null,[E,l("ul",null,[l("li",null,[o(n,{color:"green"},{default:t(()=>[e("ON")]),_:1}),e(": The game will auto-start again after the game ends")]),l("li",null,[o(n,{color:"red"},{default:t(()=>[e("OFF")]),_:1}),e(": The game will not auto-start again after the game ends"),R])])]),l("li",null,[o(n,{color:"#01ff00"},{default:t(()=>[e("Low Load Mode")]),_:1}),l("ul",null,[l("li",null,[o(n,{color:"green"},{default:t(()=>[e("ON")]),_:1}),e(": Mod will use less power for loading things, making it run a bit faster")]),l("li",null,[o(n,{color:"red"},{default:t(()=>[e("OFF")]),_:1}),e(": Mod will use its default power for loading things, making it run a bit slower")])])]),l("li",null,[o(n,{color:"#0000ff"},{default:t(()=>[e("End the game when a player has a critical error")]),_:1}),l("ul",null,[l("li",null,[o(n,{color:"green"},{default:t(()=>[e("ON")]),_:1}),e(": Game will force end once a player gets a game breaking bug")]),l("li",null,[o(n,{color:"red"},{default:t(()=>[e("OFF")]),_:1}),e(": Game will continue as before")])])]),l("li",null,[o(n,{color:"#0000ff"},{default:t(()=>[e("Hide exile (lava) chat")]),_:1}),l("ul",null,[l("li",null,[o(n,{color:"green"},{default:t(()=>[e("ON")]),_:1}),e(": Messages sent during the ejection screen will be hidden")]),l("li",null,[o(n,{color:"red"},{default:t(()=>[e("OFF")]),_:1}),e(": Messages sent during the ejection screen will not be hidden")])])]),l("li",null,[o(n,{color:"#ff00ff"},{default:t(()=>[e("Remove pets at dead players")]),_:1}),l("ul",null,[l("li",null,[o(n,{color:"green"},{default:t(()=>[e("ON")]),_:1}),e(": Whenever a player is killed, their pet will be removed")]),l("li",null,[o(n,{color:"red"},{default:t(()=>[e("OFF")]),_:1}),e(": Whenever a player is killed, their pet will not be removed")])])]),T,l("li",null,[A,l("ul",null,[l("li",null,[o(n,{color:"green"},{default:t(()=>[e("ON")]),_:1}),e(": Players will be unable to use the vote-kick menu in the chat")]),l("li",null,[o(n,{color:"red"},{default:t(()=>[e("OFF")]),_:1}),e(": Players will still be able to use the vote-kick menu in the chat")])])]),l("li",null,[H,l("ul",null,[l("li",null,[o(n,{color:"green"},{default:t(()=>[e("ON")]),_:1}),e(": Kill-log of the previous round will be displayed once people enter the lobby")]),l("li",null,[o(n,{color:"red"},{default:t(()=>[e("OFF")]),_:1}),e(": Kill-log will not automatically be displayed. (People can still "),M,e(")")])])]),l("li",null,[x,l("ul",null,[l("li",null,[o(n,{color:"green"},{default:t(()=>[e("ON")]),_:1}),e(": Everyone's roles of the previous round will be displayed once people enter the lobby")]),l("li",null,[o(n,{color:"red"},{default:t(()=>[e("OFF")]),_:1}),e(": Roles will not automatically be displayed. (People can still "),L,e(")")])])]),l("li",null,[K,l("ul",null,[l("li",null,[o(n,{color:"green"},{default:t(()=>[e("ON")]),_:1}),e(": Last Results of the previous round will be displayed once people enter the lobby")]),l("li",null,[o(n,{color:"red"},{default:t(()=>[e("OFF")]),_:1}),e(": Last Results will not automatically be displayed. (People can still "),j,e(")")])])]),B,l("li",null,[C,l("ul",null,[l("li",null,[o(n,{color:"green"},{default:t(()=>[e("ON")]),_:1}),e(": The 'Host' text before your name will be hidden")]),l("li",null,[o(n,{color:"red"},{default:t(()=>[e("OFF")]),_:1}),e(": The 'Host' text before your name will be visible")])])]),l("li",null,[q,l("ul",null,[l("li",null,[o(n,{color:"green"},{default:t(()=>[e("ON")]),_:1}),e(": Others won't see what roles are enabled/disabled")]),l("li",null,[o(n,{color:"red"},{default:t(()=>[e("OFF")]),_:1}),e(": Others can see what roles are enabled/disabled like usual")])])]),l("li",null,[I,l("ul",null,[l("li",null,[o(n,{color:"green"},{default:t(()=>[e("ON")]),_:1}),e(": players can "),V,e(" to change their Bean Color")]),l("li",null,[o(n,{color:"red"},{default:t(()=>[e("OFF")]),_:1}),e(": players cannot change it with the command and have to do it normally")])])]),l("li",null,[G,l("ul",null,[l("li",null,[o(n,{color:"green"},{default:t(()=>[e("ON")]),_:1}),e(": Players can use the "),U,e(" command to leave the lobby forever")]),l("li",null,[o(n,{color:"red"},{default:t(()=>[e("OFF")]),_:1}),e(": Players cannot use the "),W,e(" command to leave the lobby forever")])])]),l("li",null,[X,l("ul",null,[l("li",null,[o(n,{color:"green"},{default:t(()=>[e("ON")]),_:1}),e(": players can "),Y,e(" to change their Name.")]),l("li",null,[o(n,{color:"red"},{default:t(()=>[e("OFF")]),_:1}),e(": players cannot change it with the command and have to do it normally")])])]),z,l("li",null,[J,l("ul",null,[l("li",null,[o(n,{color:"green"},{default:t(()=>[e("ON")]),_:1}),e(": players cannot use emoji in their names")]),l("li",null,[o(n,{color:"red"},{default:t(()=>[e("OFF")]),_:1}),e(": players can use emoji in their names")])])]),l("li",null,[Q,l("ul",null,[l("li",null,[o(n,{color:"green"},{default:t(()=>[e("ON")]),_:1}),e(": Info about each User's role is sent to them Round 1")]),l("li",null,[o(n,{color:"red"},{default:t(()=>[e("OFF")]),_:1}),e(": Users have to manually type /m to check their role info")])])]),l("li",null,[Z,l("ul",null,[l("li",null,[o(n,{color:"green"},{default:t(()=>[e("ON")]),_:1}),e(": descriptions about each User's role is sent to them on the First Meeting")]),l("li",null,[o(n,{color:"red"},{default:t(()=>[e("OFF")]),_:1}),e(": Users have to manually type /m to check their role description")])])]),l("li",null,[o(n,{color:"red"},{default:t(()=>[e("No Game End")]),_:1}),l("ul",null,[l("li",null,[o(n,{color:"green"},{default:t(()=>[e("ON")]),_:1}),e(": the game cannot end until the host ends it")]),l("li",null,[o(n,{color:"red"},{default:t(()=>[e("OFF")]),_:1}),e(": the game can end normally")])])]),l("li",null,[o(n,{color:"red"},{default:t(()=>[e("BepInEx Console")]),_:1}),l("ul",null,[l("li",null,[o(n,{color:"green"},{default:t(()=>[e("ON")]),_:1}),e(": the console stays open during Hosting")]),l("li",null,[o(n,{color:"red"},{default:t(()=>[e("OFF")]),_:1}),e(": the console minimizes during Hosting")])])]),l("li",null,[o(n,{color:"red"},{default:t(()=>[e("Disable AntiBlackout Protects (Recommeneded for testing)")]),_:1}),l("ul",null,[l("li",null,[o(n,{color:"green"},{default:t(()=>[e("ON")]),_:1}),e(": AntiBlackout Protects will be disabled")]),l("li",null,[o(n,{color:"red"},{default:t(()=>[e("OFF")]),_:1}),e(": AntiBlackout Protects will not be disabled")])])]),l("li",null,[$,l("ul",null,[l("li",null,[e("These just change how roles are randomly assigned. You can choose between: "),l("ul",null,[ll,el,ol,l("li",null,[l("a",nl,[e("Xorshift"),o(a)])]),l("li",null,[l("a",tl,[e("MersenneTwister"),o(a)])])])])])]),l("li",null,[o(n,{color:"#ffc0cb"},{default:t(()=>[e("Camouflage Appearance")]),_:1}),l("ul",null,[l("li",null,[e("Set the appearance of how Camouflage looks when communications are sabotaged "),l("ul",null,[al,il,ul,l("li",null,[o(n,{color:"#ffff00"},{default:t(()=>[e("Host")]),_:1}),e(" - Everyone appears as the host's skin")]),l("li",null,[o(n,{color:"#e3bacd"},{default:t(()=>[e("KARPED1EM")]),_:1}),e(" - Everyone appears as KARPED1EM's skin (the orignal TOHEdited Developer)")]),l("li",null,[o(n,{color:"#f5dbdf"},{default:t(()=>[e("Lauryn")]),_:1}),e(" - Everyone appears as Lauryn's skin (Head of HR)")]),l("li",null,[o(n,{color:"#ff8000"},{default:t(()=>[e("Moe")]),_:1}),e(" - Everyone appears as Moe's skin (President)")]),l("li",null,[o(n,{color:"#ec7578"},{default:t(()=>[e("Pyro")]),_:1}),e(" - Everyone appears as Pyro's skin (the Website Assistant)")]),l("li",null,[o(n,{color:"#9e2424"},{default:t(()=>[e("ryuk")]),_:1}),e(" - Everyone appears as ryuk's skin (Co-President)")]),l("li",null,[o(n,{color:"#fffff"},{default:t(()=>[e("Gurge44")]),_:1}),e(" - Everyone appears as Gurge44's skin (EHR Developer)")]),l("li",null,[o(n,{color:"#ec7578"},{default:t(()=>[e("TommyXL")]),_:1}),e(" - Everyone appears as TommyXL's skin (Lead Developer of TOHE)")])])])])]),l("li",null,[o(n,{color:"cyan"},{default:t(()=>[e("Enable Youtuber Plan")]),_:1}),l("ul",null,[l("li",null,[o(n,{color:"green"},{default:t(()=>[e("ON")]),_:1}),e(": Host can use the command "),rl,e(" to get the specified role on the next game - Requires Permissions")]),l("li",null,[o(n,{color:"red"},{default:t(()=>[e("OFF")]),_:1}),e(": Host cannot use the command "),sl,e(" to get the specified role on the next game")])])])]),dl])}const ml=r(c,[["render",cl],["__file","System.html.vue"]]),_l=JSON.parse('{"path":"/options/Settings/system.html","title":"System Settings","lang":"en-US","frontmatter":{"lang":"en-US","title":"System Settings","prev":"/Roles.html","next":"/Roles.html"},"headers":[],"git":{"updatedTime":null,"contributors":[]},"filePathRelative":"options/Settings/system.md"}');export{ml as comp,_l as data};
