import{_ as u,r as t,o as r,c as d,a as e,b as i,w as n,d as l,e as a}from"./app-CXSTthH9.js";const s={},c={id:"üéÆ-mod-settings",tabindex:"-1"},f={class:"header-anchor",href:"#üéÆ-mod-settings"},b=e("hr",null,null,-1),h={id:"üìÉ-standard",tabindex:"-1"},_={class:"header-anchor",href:"#üìÉ-standard"},w=e("hr",null,null,-1),m={id:"ejection",tabindex:"-1"},g={class:"header-anchor",href:"#ejection"},p=e("li",null,[l("Confirm Ejections Mode "),e("ul",null,[e("li",null,[l("Set how the game will describe ejections "),e("ul",null,[e("li",null,"None - Ejections will be described as ‚Äú#### was ejected‚Äù"),e("li",null,"Team - Ejections will tell you what team the player was on"),e("li",null,"Role - Ejections will tell you what role the player was")])])])],-1),F={id:"maps",tabindex:"-1"},O={class:"header-anchor",href:"#maps"},N=e("li",null,"The Skeld - Set the chance that the map will be The Skeld",-1),D=e("li",null,"MIRA HQ - Set the chance that the map will be MIRA HQ",-1),y=e("li",null,"Polus - Set the chance that the map will be Polus",-1),S=e("li",null,"dlekS ehT - Set the chance that the map will be dlekS ehT",-1),v=e("li",null,"Airship - Set the chance that the map will be Airship",-1),k=e("li",null,"The Fungle - Set the chance that the map will be The Fungle",-1),C=e("ul",null,[e("li",null,"The Electrical room will be randomized.")],-1),A=e("li",null,[l("Reset Doors Mode "),e("ul",null,[e("li",null,"Set how Doors will be reset on these maps, choose from:"),e("li",null,"All Open"),e("li",null,"All Closed"),e("li",null,"Closed Random")])],-1),M={id:"sabotage",tabindex:"-1"},T={class:"header-anchor",href:"#sabotage"},R=e("ul",null,[e("li",null,[l("Sabotage Cooldown "),e("ul",null,[e("li",null,"Set how long the sabotage cooldown will be")])])],-1),V=e("ul",null,[e("li",null,[l("Polus Reactor Time Limit "),e("ul",null,[e("li",null,"Set how long the Polus Reactor sabotage will last")])]),e("li",null,[l("Airship Reactor Time Limit "),e("ul",null,[e("li",null,"Set how long the Airship Reactor sabotage will last")])])],-1),I={id:"disable",tabindex:"-1"},P={class:"header-anchor",href:"#disable"},E={id:"meeting",tabindex:"-1"},j={class:"header-anchor",href:"#meeting"},L=e("ul",null,[e("li",null,[l("Meeting Time When No One is Dead "),e("ul",null,[e("li",null,"Set how long the meeting will last when no one is dead")])])],-1),G=e("li",null,[l("Additional Emergency Cooldown "),e("ul",null,[e("li",null,[l("Minimum Living Players to be Applied "),e("ul",null,[e("li",null,"Set how many players need to be alive for the additional emergency cooldown to be applied")])]),e("li",null,[l("Additional Cooldown "),e("ul",null,[e("li",null,"Set how long the additional emergency cooldown will be")])])])],-1),x=e("li",null,"No vote - The player's vote will not be counted",-1),B=a("<li>If the player didn&#39;t vote <ul><li>No vote - No vote will be tallied (Abstain)</li><li>Suicide - The player will suicide after the meeting</li><li>Self Vote - The player will vote themself</li><li>Skip - The player will automatically skip</li></ul></li><li>When Tied Vote <ul><li>No ejects - No ejects will happen (Tied)</li><li>Eject All - Ejects all tied players</li><li>Eject Random - Ejects a random player between the tied players</li></ul></li>",2),Z={id:"different",tabindex:"-1"},H={class:"header-anchor",href:"#different"},Q=e("ul",null,[e("li",null,[l("Fall to Death Chance "),e("ul",null,[e("li",null,"Set the chance that players have to die when falling from ladders")])])],-1),U=e("li",null,[l("Kill Flash Duration "),e("ul",null,[e("li",null,"Set how long the kill flash will last")])],-1),K={id:"ghost",tabindex:"-1"},z={class:"header-anchor",href:"#ghost"},W=e("li",null,[l("Max Impostor Ghost Roles "),e("ul",null,[e("li",null,"Set how many Impostor Ghost Roles can spawn")])],-1),J=e("li",null,"Max Crewmate Ghost Roles * Set how many Crewmate Ghost Roles can spawn",-1),q=e("li",null,"Default Ability Cooldown * Set how long the ability cooldown for ghosts will last by default",-1),X={id:"‚öîÔ∏è-free-for-all",tabindex:"-1"},Y={class:"header-anchor",href:"#‚öîÔ∏è-free-for-all"},$=e("hr",null,null,-1),ll=e("li",null,[e("p",null,"Maximum Game Length"),e("ul",null,[e("li",null,"Set how long the game will be")])],-1),el=e("li",null,[e("p",null,"Kill Cooldown"),e("ul",null,[e("li",null,"Set the global Kill Cooldown of all players")])],-1),ol=e("p",null,"Prevent venting when only 2 players are alive",-1),il=e("p",null,"Prevent players whose kill cooldown is up from venting",-1),nl=e("p",null,"Enable Random Events",-1),al=a("<li><p>Shield Duration</p><ul><li>Set how long Shields will last</li></ul></li><li><p>Increased Speed</p><ul><li>Set how fast Increased Speed makes players</li></ul></li><li><p>Decreased Speed</p><ul><li>Set how slow Decreased Speed makes players</li></ul></li><li><p>Modified Speed Duration</p><ul><li>Set how long Speed modifications will last</li></ul></li><li><p>Lowered Vision</p><ul><li>Set how low the Vision will be</li></ul></li><li><p>Lowered Vision Duration</p><ul><li>Set how long Lowered Vision will last</li></ul></li>",6),ul=e("p",null,"Enable Random Swaps from time to time",-1),tl=e("p",null,"Shields break after 1 kill attempt",-1),rl=e("p",null,"Random Maps Mode",-1),dl=e("li",null,"The Skeld - Set the chance that the map will be The Skeld",-1),sl=e("li",null,"MIRA HQ - Set the chance that the map will be MIRA HQ",-1),cl=e("li",null,"Polus - Set the chance that the map will be Polus",-1),fl=e("li",null,"dlekS ehT - Set the chance that the map will be dlekS ehT",-1),bl=e("li",null,"Airship - Set the chance that the map will be Airship",-1),hl=e("li",null,"The Fungle - Set the chance that the map will be The Fungle",-1),_l=e("p",null,"Map Modifications",-1),wl=e("ul",null,[e("li",null,"The Electrical room will be randomized.")],-1),ml=e("p",null,"Disable Devices",-1);function gl(pl,Fl){const o=t("font");return r(),d("div",null,[e("h1",c,[e("a",f,[e("span",null,[i(o,{color:"#ffc0cb"},{default:n(()=>[l("üéÆ Mod Settings")]),_:1})])])]),b,e("h2",h,[e("a",_,[e("span",null,[i(o,{color:"#ffc0cb"},{default:n(()=>[l("üìÉ Standard")]),_:1})])])]),w,e("h3",m,[e("a",g,[e("span",null,[i(o,{size:"4em",color:"#ffeee8"},{default:n(()=>[l("Ejection")]),_:1})])])]),e("ul",null,[p,e("li",null,[l("Show remaining "),i(o,{color:"red"},{default:n(()=>[l("Impostors")]),_:1}),l(" on ejects "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": The game will tell you how many "),i(o,{color:"red"},{default:n(()=>[l("Impostors")]),_:1}),l(" are left"),e("ul",null,[e("li",null,[l("Show remaining "),i(o,{color:"#7f8c8d"},{default:n(()=>[l("Neutral Killers")]),_:1}),l(" on ejects "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": The game will tell you how many "),i(o,{color:"#7f8c8d"},{default:n(()=>[l("Neutral Killers")]),_:1}),l(" are left")]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": The game will not tell you how many "),i(o,{color:"#7f8c8d"},{default:n(()=>[l("Neutral Killers")]),_:1}),l(" are left")])])])])]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": The game will not tell you how many "),i(o,{color:"red"},{default:n(()=>[l("Impostors")]),_:1}),l(" are left")])])]),e("li",null,[l("Show what team the ejected player's role is on "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": The game will tell you what team the ejected player's role is on")]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": The game will not tell you what team the ejected player's role is on")])])]),e("li",null,[l("Confirm Egoists on ejection "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": Egoists will be confirmed on ejection")]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": Egoists will not be confirmed on ejection")])])]),e("li",null,[l("Confirm Lovers on ejection "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": Lovers will be confirmed on ejection")]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": Lovers will not be confirmed on ejection")])])])]),e("h3",F,[e("a",O,[e("span",null,[i(o,{size:"4em",color:"#13bce9"},{default:n(()=>[l("Maps")]),_:1})])])]),e("ul",null,[e("li",null,[l("Random Maps Mode "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": Map will be chosen randomly"),e("ul",null,[e("li",null,[l("Chance that the map is "),e("ul",null,[N,D,y,S,v,k,e("li",null,[l("Use a more random map selection "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": Maps will be selected even more randomly")]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": Maps will not be selected even more randomly")])])])])])])]),e("li",null,[l("Random Spawns Mode "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": Spawn locations will be chosen randomly"),e("ul",null,[e("li",null,[l("Random Spawns in Locations "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": Spawn locations will be chosen randomly in their respective locations"),e("ul",null,[e("li",null,[l("Additional Spawn Locations (Airship) "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": More spawn locations will be added")]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": More spawn locations will not be added")])])])])]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": Spawn locations will be chosen randomly in the entire map")])])]),e("li",null,[l("Random Spawns on Vents "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": Spawn locations will be chosen randomly on vents")]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": Spawn locations will be chosen normally")])])])])]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": Spawn locations will be chosen normally")])])]),e("li",null,[l("Map Modifications "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": Mess with Map modifiers to change how you can play on maps")]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": Map modifiers will not be implemented and will work as Vanilla intended"),e("ul",null,[e("li",null,[l("Variable Electrical ("),i(o,{color:"red"},{default:n(()=>[l("Airship")]),_:1}),l(") "),C]),e("li",null,[l("Disable Moving Platform ("),i(o,{color:"red"},{default:n(()=>[l("Airship")]),_:1}),l(") "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": Moving platform will be disabled")]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": Moving platform will be enabled")])])]),e("li",null,[l("Disable Spore Trigger ("),i(o,{color:"#ffa646"},{default:n(()=>[l("Fungle")]),_:1}),l(") "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": Spore Trigger will be disabled")]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": Spore Trigger will be enabled")])])]),e("li",null,[l("Disable Zipline ("),i(o,{color:"#ffa646"},{default:n(()=>[l("Fungle")]),_:1}),l(") "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": Zipline will be disabled"),e("ul",null,[e("li",null,[l("Disable Use From Top "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": Zipline will be disabled from the top")]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": Zipline will not be disabled from the top")])])]),e("li",null,[l("Disable Use From Bottom "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": Zipline will be disabled from the bottom")]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": Zipline will not be disabled from the bottom")])])])])]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": Zipline will be enabled")])])])])])])]),e("li",null,[l("Reset Doors After Meetings ("),i(o,{color:"red"},{default:n(()=>[l("Airship")]),_:1}),l("/"),i(o,{color:"#a167c0"},{default:n(()=>[l("Polus")]),_:1}),l("/"),i(o,{color:"#ffa646"},{default:n(()=>[l("Fungle")]),_:1}),l(") "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": Doors will be reset after meetings"),e("ul",null,[A,e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": Doors will not be reset after meetings")])])])])])])])]),e("h3",M,[e("a",T,[e("span",null,[i(o,{size:"4em",color:"#f36060"},{default:n(()=>[l("Sabotage")]),_:1})])])]),e("ul",null,[e("li",null,[l("Camouflage During Comms Sabotage "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": when Comms are sabotaged, everyone will turn into the specified appearance"),e("ul",null,[e("li",null,[l("Disable comms camouflage on some maps "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": Comms camouflage will be disabled on some maps"),e("ul",null,[e("li",null,[l("Disable comms camouflage on The Skeld "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": Comms camouflage will be disabled on The Skeld")]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": Comms camouflage will be enabled on The Skeld")])])]),e("li",null,[l("Disable comms camouflage on MiraHQ "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": Comms camouflage will be disabled on MiraHQ")]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": Comms camouflage will be enabled on MiraHQ")])])]),e("li",null,[l("Disable comms camouflage on Polus "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": Comms camouflage will be disabled on Polus")]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": Comms camouflage will be enabled on Polus")])])]),e("li",null,[l("Disable comms camouflage on Airship "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": Comms camouflage will be disabled on Airship")]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": Comms camouflage will be enabled on Airship")])])]),e("li",null,[l("Disable comms camouflage on Fungle "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": Comms camouflage will be disabled on Fungle")]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": Comms camouflage will be enabled on Fungle")])])])])])])]),e("li",null,[l("Disable body reporting while camouflaged "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": players cannot report bodies while camouflaged")]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": players can report bodies while camouflaged")])])])])]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": Camouflage Comms Sabotage works like it normally would")])])]),e("li",null,[l("Sabotage Cooldown Control "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": the host can control the sabotage cooldown"),R]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": the sabotage cooldown will be normal")])])]),e("li",null,[l("Sabotage Duration Control "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": the host can control how long sabotages last"),V]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": the sabotages will last their normal duration")])])]),e("li",null,[l("Fix Lights Special Settings "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": the host can control what happens when the lights are fixed"),e("ul",null,[e("li",null,[l("Block Switches When They Are Up "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": switches will be blocked when they are on")]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": switches will not be blocked when they are on")])])]),e("li",null,[l("Disable Viewing Deck Lights Panel (Airship) "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": the Viewing Deck Lights Panel will be disabled")]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": the Viewing Deck Lights Panel will be enabled")])])]),e("li",null,[l("Disable Gap Room Lights Panel (Airship) "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": the Gap Room Lights Panel will be disabled")]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": the Gap Room Lights Panel will be enabled")])])]),e("li",null,[l("Disable Cargo Lights Panel "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": the Cargo Lights Panel will be disabled")]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": the Cargo Lights Panel will be enabled")])])])])])])])]),e("h3",I,[e("a",P,[e("span",null,[i(o,{size:"4em",color:"#ff9999"},{default:n(()=>[l("Disable")]),_:1})])])]),e("ul",null,[e("li",null,[l("Disable Unnecessary Shield Animations "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": Unnecessary animations will be disabled")]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": All animations will be enabled")])])]),e("li",null,[l("Disable Kill Animations on Guesses "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": Kill animations will be disabled when guessing")]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": Kill animations will be enabled when guessing")])])]),e("li",null,[l("Disable Vanilla Roles "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": the host can disable Vanilla Roles")]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": Vanilla Roles will be enabled")])])]),e("li",null,[l("Disable Task Win "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": Task wins will not be possible")]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": Task wins will be possible")])])]),e("li",null,[l("Disable Meetings "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": Meetings will not be possible")]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": Meetings will be possible")])])]),e("li",null,[l("Disable Sabotages "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": Sabotages will not be possible"),e("ul",null,[e("li",null,[l("Disable Doors Sabotage "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": Doors Sabotage will be disabled")]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": Doors Sabotage will be enabled")])])])])]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": Sabotages will be possible")])])]),e("li",null,[l("Disable Devices "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": Devices will be disabled"),e("ul",null,[e("li",null,[l("Disable Skeld Devices "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": Skeld Devices will be disabled"),e("ul",null,[e("li",null,[l("Disable Admin "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": Admin will be disabled")]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": Admin will be enabled")])])]),e("li",null,[l("Disable Cameras "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": Cameras will be disabled")]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": Cameras will be enabled")])])])])]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": Skeld Devices will be enabled")])])]),e("li",null,[l("Disable MiraHQ Devices "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": MiraHQ Devices will be disabled"),e("ul",null,[e("li",null,[l("Disable Admin "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": Admin will be disabled")]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": Admin will be enabled")])])]),e("li",null,[l("Disable DoorLog "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": DoorLog will be disabled")]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": DoorLog will be enabled")])])])])]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": MiraHQ Devices will be enabled")])])]),e("li",null,[l("Disable Polus Devices "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": Polus Devices will be disabled"),e("ul",null,[e("li",null,[l("Disable Admin "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": Admin will be disabled")]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": Admin will be enabled")])])]),e("li",null,[l("Disable Cameras "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": Cameras will be disabled")]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": Cameras will be enabled")])])]),e("li",null,[l("Disable Vitals "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": Vitals will be disabled")]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": Vitals will be enabled")])])])])]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": Polus Devices will be enabled")])])]),e("li",null,[l("Disable Airship Devices "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": Airship Devices will be disabled"),e("ul",null,[e("li",null,[l("Disable Cockpit Admin "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": Cockpit Admin will be disabled")]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": Cockpit Admin will be enabled")])])]),e("li",null,[l("Disable Records Admin "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": Records Admin will be disabled")]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": Records Admin will be enabled")])])]),e("li",null,[l("Disable Cameras "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": Cameras will be disabled")]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": Cameras will be enabled")])])]),e("li",null,[l("Disable Vitals "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": Vitals will be disabled")]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": Vitals will be enabled")])])])])]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": Airship Devices will be enabled")])])]),e("li",null,[l("Disable Fungle Devices "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": Fungle Devices will be disabled"),e("ul",null,[e("li",null,[l("Disable Binoculars "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": Binoculars will be disabled")]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": Binoculars will be enabled")])])]),e("li",null,[l("Disable Vitals "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": Vitals will be disabled")]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": Vitals will be enabled")])])])])]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": Fungle Devices will be enabled")])])])])]),e("li",null,[l("Ignore Conditions "),e("ul",null,[e("li",null,[l("Ignore "),i(o,{color:"red"},{default:n(()=>[l("Impostors")]),_:1}),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": "),i(o,{color:"red"},{default:n(()=>[l("Impostors")]),_:1}),l(" conditions will be ignored")]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": "),i(o,{color:"red"},{default:n(()=>[l("Impostors")]),_:1}),l(" conditions will not be ignored")])])]),e("li",null,[l("Ignore "),i(o,{color:"#7f8c8d"},{default:n(()=>[l("Neutrals")]),_:1}),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": "),i(o,{color:"#7f8c8d"},{default:n(()=>[l("Neutrals")]),_:1}),l(" conditions will be ignored")]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": "),i(o,{color:"#7f8c8d"},{default:n(()=>[l("Neutrals")]),_:1}),l(" conditions will not be ignored")])])]),e("li",null,[l("Ignore "),i(o,{color:"#8cffff"},{default:n(()=>[l("Crewmates")]),_:1}),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": "),i(o,{color:"#8cffff"},{default:n(()=>[l("Crewmates")]),_:1}),l(" conditions will be ignored")]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": "),i(o,{color:"#8cffff"},{default:n(()=>[l("Crewmates")]),_:1}),l(" conditions will not be ignored")])])]),e("li",null,[l("Ignore after First Death "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": Conditions will be ignored after the first death")]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": Conditions will not be ignored after the first death")])])])])])])])]),e("h3",E,[e("a",j,[e("span",null,[i(o,{size:"4em",color:"#93f1f0"},{default:n(()=>[l("Meeting")]),_:1})])])]),e("ul",null,[e("li",null,[l("Sync Buttons Mode "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": the host can control how many buttons are allowed overall")]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": the buttons needed to call a meeting will be normal")])])]),e("li",null,[l("Meeting When No One is Dead "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": the host can control whether meetings can be called when no one is dead"),L]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": meetings can be called when no one is dead")])])]),G,e("li",null,[l("Voting Mode "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": Change how votes work"),e("ul",null,[e("li",null,[l("If the Player Skipped "),e("ul",null,[x,e("li",null,[l("Suicide - The player will suicide after meeting "),e("ul",null,[e("li",null,[l("Ignore the First Meeting "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": The first meeting will not make the player suicide")]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": The first meeting will make the player suicide")])])]),e("li",null,[l("Ignore when No Dead Body "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": If there's no dead body, skipping will not make the player suicide")]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": If there's no dead body, skipping will make the player suicide")])])]),e("li",null,[l("Ignore at Emergency Meetings "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": If an Emergency Button is called, skipping will not make the player suicide")]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": If an Emergency Button is called, skipping will make the player suicide")])])])])]),e("li",null,[l("Self Vote - The player will vote themself "),e("ul",null,[e("li",null,[l("Ignore the First Meeting "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": The first meeting will not make the player self-vote")]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": The first meeting will make the player self-vote")])])]),e("li",null,[l("Ignore when No Dead Body "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": If there's no dead body, skipping will not make the player self-vote")]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": If there's no dead body, skipping will make the player self-vote")])])]),e("li",null,[l("Ignore at Emergency Meetings "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": If an Emergency Button is called, skipping will not make the player self-vote")]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": If an Emergency Button is called, skipping will make the player self-vote")])])])])])])]),B])]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": Votes will remain the same")])])])]),e("h3",Z,[e("a",H,[e("span",null,[i(o,{size:"4em",color:"#c1ffd1"},{default:n(()=>[l("Different")]),_:1})])])]),e("ul",null,[e("li",null,[l("Fall From Ladders "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": Players will fall from ladders"),Q]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": Players will not fall from ladders")])])]),e("li",null,[l("Reset First Kill Cooldown "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": The kill cooldown will be reset to their respective cooldowns")]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": The kill cooldown will be standard")])])]),e("li",null,[l("Shield the person who got killed first in the last game "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": Protects the player who was killed in the previous game")]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": The game will go as normal")])])]),U]),e("h3",K,[e("a",z,[e("span",null,[i(o,{size:"4em",color:"#d9daff"},{default:n(()=>[l("Ghost")]),_:1})])])]),e("ul",null,[e("li",null,[l("Ghosts Exempt From Tasks "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": Ghosts will be exempt from tasks")]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": Ghosts will not be exempt from tasks")])])]),e("li",null,[l("Ghosts Can See Other Roles "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": Ghosts will be able to see other players' roles")]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": Ghosts will not be able to see other players' roles")])])]),e("li",null,[l("Ghosts Can See Vote Colors "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": Ghosts will be able to see other players' vote colors")]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": Ghosts will not be able to see other players' vote colors")])])]),e("li",null,[l("Ghosts Can See Cause of Death "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": Ghosts will be able to see the cause of death of other players")]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": Ghosts will not be able to see the cause of death of other players")])])]),e("li",null,[l("Converted Players can be any Ghost Roles "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": Converted Players can be any Ghost Roles")]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": Converted Players cannot be any Ghost Roles")])])]),W,J,q]),e("h2",X,[e("a",Y,[e("span",null,[i(o,{color:"#ffc0cb"},{default:n(()=>[l("‚öîÔ∏è Free For All")]),_:1})])])]),$,e("ul",null,[ll,el,e("li",null,[ol,e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": Venting will be disabled when only 2 players are alive")]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": Venting will not be disabled when only 2 players are alive")])])]),e("li",null,[il,e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": Players who have 0 Cooldown will not be able to vent")]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": Players who have 0 Cooldown will still be able to vent")])])]),e("li",null,[nl,e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": Random Events may occur")]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": Random Events will not occur")])])]),al,e("li",null,[ul,e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": Random Swaps may occur")]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": Random Swaps will not occur")])])]),e("li",null,[tl,e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": Shields will break after 1 kill attempt")]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": Shields will not break after 1 kill attempt")])])]),e("li",null,[rl,e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": Map will be chosen randomly"),e("ul",null,[e("li",null,[l("Chance that the map is "),e("ul",null,[dl,sl,cl,fl,bl,hl,e("li",null,[l("Use a more random map selection "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": Maps will be selected even more randomly")]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": Maps will not be selected even more randomly")])])])])])])])])]),e("li",null,[_l,e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": Mess with Map modifiers to change how you can play on maps")]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": Map modifiers will not be implemented and will work as Vanilla intended"),e("ul",null,[e("li",null,[l("Variable Electrical ("),i(o,{color:"red"},{default:n(()=>[l("Airship")]),_:1}),l(") "),wl]),e("li",null,[l("Disable Moving Platform ("),i(o,{color:"red"},{default:n(()=>[l("Airship")]),_:1}),l(") "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": Moving platform will be disabled")]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": Moving platform will be enabled")])])]),e("li",null,[l("Disable Spore Trigger ("),i(o,{color:"#ffa646"},{default:n(()=>[l("Fungle")]),_:1}),l(") "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": Spore Trigger will be disabled")]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": Spore Trigger will be enabled")])])]),e("li",null,[l("Disable Zipline ("),i(o,{color:"#ffa646"},{default:n(()=>[l("Fungle")]),_:1}),l(") "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": Zipline will be disabled"),e("ul",null,[e("li",null,[l("Disable Use From Top "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": Zipline will be disabled from the top")]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": Zipline will not be disabled from the top")])])]),e("li",null,[l("Disable Use From Bottom "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": Zipline will be disabled from the bottom")]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": Zipline will not be disabled from the bottom")])])])])]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": Zipline will be enabled")])])])])])])]),e("li",null,[ml,e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": Devices will be disabled"),e("ul",null,[e("li",null,[l("Disable Skeld Devices "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": Skeld Devices will be disabled"),e("ul",null,[e("li",null,[l("Disable Admin "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": Admin will be disabled")]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": Admin will be enabled")])])]),e("li",null,[l("Disable Cameras "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": Cameras will be disabled")]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": Cameras will be enabled")])])])])]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": Skeld Devices will be enabled")])])]),e("li",null,[l("Disable MiraHQ Devices "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": MiraHQ Devices will be disabled"),e("ul",null,[e("li",null,[l("Disable Admin "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": Admin will be disabled")]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": Admin will be enabled")])])]),e("li",null,[l("Disable DoorLog "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": DoorLog will be disabled")]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": DoorLog will be enabled")])])])])]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": MiraHQ Devices will be enabled")])])]),e("li",null,[l("Disable Polus Devices "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": Polus Devices will be disabled"),e("ul",null,[e("li",null,[l("Disable Admin "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": Admin will be disabled")]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": Admin will be enabled")])])]),e("li",null,[l("Disable Cameras "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": Cameras will be disabled")]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": Cameras will be enabled")])])]),e("li",null,[l("Disable Vitals "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": Vitals will be disabled")]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": Vitals will be enabled")])])])])]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": Polus Devices will be enabled")])])]),e("li",null,[l("Disable Airship Devices "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": Airship Devices will be disabled"),e("ul",null,[e("li",null,[l("Disable Cockpit Admin "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": Cockpit Admin will be disabled")]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": Cockpit Admin will be enabled")])])]),e("li",null,[l("Disable Records Admin "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": Records Admin will be disabled")]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": Records Admin will be enabled")])])]),e("li",null,[l("Disable Cameras "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": Cameras will be disabled")]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": Cameras will be enabled")])])]),e("li",null,[l("Disable Vitals "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": Vitals will be disabled")]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": Vitals will be enabled")])])])])]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": Airship Devices will be enabled")])])]),e("li",null,[l("Disable Fungle Devices "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": Fungle Devices will be disabled"),e("ul",null,[e("li",null,[l("Disable Binoculars (Will Not Work for Vanilla) "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": Binoculars will be disabled")]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": Binoculars will be enabled")])])]),e("li",null,[l("Disable Vitals "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": Vitals will be disabled")]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": Vitals will be enabled")])])])])]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": Fungle Devices will be enabled")])])])])]),e("li",null,[l("Ignore Conditions "),e("ul",null,[e("li",null,[l("Ignore "),i(o,{color:"red"},{default:n(()=>[l("Impostors")]),_:1}),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": "),i(o,{color:"red"},{default:n(()=>[l("Impostors")]),_:1}),l(" conditions will be ignored")]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": "),i(o,{color:"red"},{default:n(()=>[l("Impostors")]),_:1}),l(" conditions will not be ignored")])])]),e("li",null,[l("Ignore "),i(o,{color:"#7f8c8d"},{default:n(()=>[l("Neutrals")]),_:1}),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": "),i(o,{color:"#7f8c8d"},{default:n(()=>[l("Neutrals")]),_:1}),l(" conditions will be ignored")]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": "),i(o,{color:"#7f8c8d"},{default:n(()=>[l("Neutrals")]),_:1}),l(" conditions will not be ignored")])])]),e("li",null,[l("Ignore "),i(o,{color:"#8cffff"},{default:n(()=>[l("Crewmates")]),_:1}),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": "),i(o,{color:"#8cffff"},{default:n(()=>[l("Crewmates")]),_:1}),l(" conditions will be ignored")]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": "),i(o,{color:"#8cffff"},{default:n(()=>[l("Crewmates")]),_:1}),l(" conditions will not be ignored")])])]),e("li",null,[l("Ignore after First Death "),e("ul",null,[e("li",null,[i(o,{color:"green"},{default:n(()=>[l("ON")]),_:1}),l(": Conditions will be ignored after the first death")]),e("li",null,[i(o,{color:"red"},{default:n(()=>[l("OFF")]),_:1}),l(": Conditions will not be ignored after the first death")])])])])])])])])])}const Nl=u(s,[["render",gl],["__file","Mod.html.vue"]]),Dl=JSON.parse('{"path":"/options/Settings/Mod.html","title":"Mod Settings","lang":"en-US","frontmatter":{"lang":"en-US","title":"Mod Settings","prev":"/Roles.html","next":"/Roles.html"},"headers":[{"level":2,"title":"üìÉ Standard","slug":"üìÉ-standard","link":"#üìÉ-standard","children":[{"level":3,"title":"Ejection","slug":"ejection","link":"#ejection","children":[]},{"level":3,"title":"Maps","slug":"maps","link":"#maps","children":[]},{"level":3,"title":"Sabotage","slug":"sabotage","link":"#sabotage","children":[]},{"level":3,"title":"Disable","slug":"disable","link":"#disable","children":[]},{"level":3,"title":"Meeting","slug":"meeting","link":"#meeting","children":[]},{"level":3,"title":"Different","slug":"different","link":"#different","children":[]},{"level":3,"title":"Ghost","slug":"ghost","link":"#ghost","children":[]}]},{"level":2,"title":"‚öîÔ∏è Free For All","slug":"‚öîÔ∏è-free-for-all","link":"#‚öîÔ∏è-free-for-all","children":[]}],"git":{"updatedTime":1721112969000,"contributors":[{"name":"Pyro","email":"btriche.sots@gmail.com","commits":3}]},"filePathRelative":"options/Settings/Mod.md"}');export{Nl as comp,Dl as data};
